// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using PublicTransportAPI.Models;

namespace PublicTransportAPI.Data
{
    public partial class PublicTransportAPIContext : DbContext
    {
        public PublicTransportAPIContext()
        {
        }

        public PublicTransportAPIContext(DbContextOptions<PublicTransportAPIContext> options)
            : base(options)
        {
        }

        public virtual DbSet<TbLinha> TbLinhas { get; set; }
        public virtual DbSet<TbLinhaParadum> TbLinhaParada { get; set; }
        public virtual DbSet<TbParadum> TbParada { get; set; }
        public virtual DbSet<TbPosicaoVeiculo> TbPosicaoVeiculos { get; set; }
        public virtual DbSet<TbVeiculo> TbVeiculos { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<TbLinha>(entity =>
            {
                entity.HasKey(e => e.LinhaId);

                entity.ToTable("TB_LINHA");

                entity.Property(e => e.LinhaId).HasColumnName("LINHA_ID");

                entity.Property(e => e.LinhaNome)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("LINHA_NOME");
            });

            modelBuilder.Entity<TbLinhaParadum>(entity =>
            {
                entity.HasKey(e => e.LinhaParadaId);

                entity.ToTable("TB_LINHA_PARADA");

                entity.Property(e => e.LinhaParadaId).HasColumnName("LINHA_PARADA_ID");

                entity.Property(e => e.FkLinhaId).HasColumnName("FK_LINHA_ID");

                entity.Property(e => e.FkParadaId).HasColumnName("FK_PARADA_ID");

                entity.HasOne(d => d.FkLinha)
                    .WithMany(p => p.TbLinhaParada)
                    .HasForeignKey(d => d.FkLinhaId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TB_LINHA_PARADA_TB_LINHA");

                entity.HasOne(d => d.FkParada)
                    .WithMany(p => p.TbLinhaParada)
                    .HasForeignKey(d => d.FkParadaId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TB_LINHA_PARADA_TB_PARADA");
            });

            modelBuilder.Entity<TbParadum>(entity =>
            {
                entity.HasKey(e => e.ParadaId);

                entity.ToTable("TB_PARADA");

                entity.Property(e => e.ParadaId)
                    .ValueGeneratedNever()
                    .HasColumnName("PARADA_ID");

                entity.Property(e => e.ParadaLatitude).HasColumnName("PARADA_LATITUDE");

                entity.Property(e => e.ParadaLongitude).HasColumnName("PARADA_LONGITUDE");

                entity.Property(e => e.ParadaNome)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("PARADA_NOME");
            });

            modelBuilder.Entity<TbPosicaoVeiculo>(entity =>
            {
                entity.HasKey(e => e.PoveId);

                entity.ToTable("TB_POSICAO_VEICULO");

                entity.Property(e => e.PoveId)
                    .ValueGeneratedNever()
                    .HasColumnName("POVE_ID");

                entity.Property(e => e.FkVeicId).HasColumnName("FK_VEIC_ID");

                entity.Property(e => e.PoveLatitude).HasColumnName("POVE_LATITUDE");

                entity.Property(e => e.PoveLongitude).HasColumnName("POVE_LONGITUDE");

                entity.HasOne(d => d.FkVeic)
                    .WithMany(p => p.TbPosicaoVeiculos)
                    .HasForeignKey(d => d.FkVeicId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TB_POSICAO_VEICULO_TB_VEICULO");
            });

            modelBuilder.Entity<TbVeiculo>(entity =>
            {
                entity.HasKey(e => e.VeicId);

                entity.ToTable("TB_VEICULO");

                entity.Property(e => e.VeicId)
                    .ValueGeneratedNever()
                    .HasColumnName("VEIC_ID");

                entity.Property(e => e.FkLinhaId).HasColumnName("FK_LINHA_ID");

                entity.Property(e => e.VeicModelo)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("VEIC_MODELO");

                entity.Property(e => e.VeicNome)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("VEIC_NOME");

                entity.HasOne(d => d.FkLinha)
                    .WithMany(p => p.TbVeiculos)
                    .HasForeignKey(d => d.FkLinhaId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TB_VEICULO_TB_LINHA");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}